
public class PartTimeStaffHire extends StaffHire {
    private int workingHour;
    private double wagesPerHour;
    private String shifts;
    private boolean terminated;

    public PartTimeStaffHire(int vacancyNumber, String designationType, String jobType, String staffName, String joiningDate, String qualification, String appointedBy, boolean joined, int workingHour, double wagesPerHour, String shifts) 
    {
        super(vacancyNumber, designationType, jobType, staffName, joiningDate, qualification, appointedBy, joined);
        this.workingHour = workingHour;
        this.wagesPerHour = wagesPerHour;
        this.shifts = shifts;
        this.terminated = false;
    }

    public int getworkingHour()
    {
        return workingHour;
    }
    
    public double getWagesPerHour()
    {
        return wagesPerHour;
    }
    
    public String getShifts()
    {
        return shifts;
    }
    
    public boolean getTerminated()
    {
        return terminated;
    }

    public void setShifts(String newShifts)
    {
        shifts = newShifts;
    }

    public void terminate()
    {
        if (terminated = true)
        {
            System.out.println("This staff member has already been terminated!");
        }
        
        else
        {
            staffName = "";
            joiningDate = "";
            qualification = "";
            appointedBy = "";
            joined = false;
            terminated = true;
            
        }
    }
    
    public void displayPartTimeInfo()
    {
        displayInfo();
        if (workingHour != 0)
        {
            System.out.println("Wages per hour: " + wagesPerHour);
            System.out.println("Working hours: " + workingHour);
            System.out.println("Shifts: " + shifts);
            System.out.println("Terminated: " + terminated);
            System.out.println("Income per day: " + (wagesPerHour * workingHour));
        }
    }
}

